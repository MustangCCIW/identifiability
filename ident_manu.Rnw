\documentclass[preprint]{elsarticle}
\usepackage[paperwidth=8.5in,paperheight=11in,top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,allcolors=Blue]{hyperref}
\usepackage{lineno}
\usepackage{cleveref}
\usepackage{acronym}
\usepackage{paralist}
\usepackage{bm}
\usepackage{fixltx2e}
% \usepackage[inline]{showlabels}

\journal{Ecological Modelling}

% biblio options
\bibliographystyle{elsarticle-harv}
\biboptions{authoryear}

% cleveref options
\crefname{table}{Table}{Tables}
\crefname{figure}{Fig.}{Figs.}
\renewcommand{\figurename}{Fig.}

% aliased citations
\defcitealias{LehrterIP}{Lehrter et al. in press}

%acronyms
\acrodef{chla}[chl-\textit{a}]{chlorophyll \textit{a}}
\acrodef{cgem}[CGEM]{Coastal General Ecosystem Model}
\acrodef{do}[O$_2$]{dissolved oxygen}
\acrodef{dom}[DOM]{dissolved organic matter}
\acrodef{gom}[GOM]{Gulf of Mexico}
\acrodef{lcs}[LCS]{Louisiana continental shelf}
\acrodef{marb}[MARB]{Mississippi-Atchafalaya River Basin}
\acrodef{pom}[POM]{particulate organic matter}
\acrodef{zerod}[0-D]{zero-dimensional}

%for supplemental figures/tables
\newcommand{\beginsupplement}{%
        \setcounter{table}{0}
        \renewcommand{\thetable}{S\arabic{table}}%
        \setcounter{figure}{0}
        \renewcommand{\thefigure}{S\arabic{figure}}%
     }

% invisible section anchor
\newcommand\invisiblesection[1]{%
  \refstepcounter{section}%
  \addcontentsline{toc}{section}{\protect\numberline{\thesection}#1}%
  \sectionmark{#1}}

% macro fix for multiple asterisks for corr author
\makeatletter
\def\@author#1{\g@addto@macro\elsauthors{\normalsize%
    \def\baselinestretch{1}%
    \upshape\authorsep#1\unskip\textsuperscript{%
      \ifx\@fnmark\@empty\else\unskip\sep\@fnmark\let\sep=,\fi
      \ifx\@corref\@empty\else\unskip\sep\@corref\let\sep=,\fi
      }%
    \def\authorsep{\unskip,\space}%
    \global\let\@fnmark\@empty
    \global\let\@corref\@empty  %% Added
    \global\let\sep\@empty}%
    \@eadauthor={#1}
}
\makeatother

% fix warning if acronyms are reset after abstract
\makeatletter
\renewcommand*\@verridelabel[1]{%
  \@bsphack
  \protected@write\@auxout{}{\string\undonewlabel{#1}}%
  \protected@write\@auxout{}{\string\undonewlabel{#1@cref}}%Added for cleverref
  \label{#1}%
  \@overriddenmessage rs{#1}%
  \@esphack
}%
\makeatother

\linespread{1.5}

%knitr options
<<setup, include = F, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold', message = F, echo = F, results = 'asis', dev = 'pdf', dev.args = list(family = 'serif'), fig.pos = '!ht', warning = F)
options(replace.assign = TRUE, width = 90)
@

% R dependencies
<<include = F, cache = F>>=
source('R/funcs.r')
library(tidyr)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(Hmisc)
library(ggrepel)
library(english)
library(purrr)
library(grid)
library(lubridate)
# library(raster)
library(rgeos)
library(ggpolypath)
library(readxl)
library(ggmap)
library(ggsn)
@

% get the version from git log
<<echo = FALSE, cache = FALSE>>=
raw <- system('git log -1', intern = TRUE)
date <- raw[grep('^Date', raw)]
date <- gsub('^Date:\\s*', '', date)
commit <- raw[grep('^commit', raw)]
commit <- gsub('^commit ', '', commit)
commit <- paste0('\\href{https://github.com/fawda123/identifiability/commit/', commit, '}{', commit, '}')
vers <- paste0('Version: ', date, ', ', commit)
@

% get online bib file
<<echo = FALSE, cache = FALSE>>=
refs <- httr::GET('https://raw.githubusercontent.com/fawda123/refs/master/refs.bib')
refs <- rawToChar(refs$content)
writeLines(refs, con = file('refs.bib'))

# library(Jabbrev)
# bbl_ext('ident_manu.bbl', 'refs.bib', 'ident_manu.bib')
# bib_shr('ident_manu.bib', 'refsshr.bib')
@

\begin{document}

\begin{frontmatter}

\title{Parameter sensitivity and identifiability for a biogeochemical model of hypoxia in the northern {G}ulf of {M}exico\tnoteref{mytitlenote}}
\tnotetext[mytitlenote]{\Sexpr{vers}}

\date{}

\author{Marcus W. Beck\corref{mycorrespondingauthor}}
\address{USEPA National Health and Environmental Effects Research Laboratory, Gulf Ecology Division, 1 Sabine Island Drive, Gulf Breeze, FL 32561}
\cortext[mycorrespondingauthor]{Corresponding author}
\ead{beck.marcus@epa.gov}

\author{John C. Lehrter}
\address{Dauphin Island Sea Lab, University of South Alabama, Dauphin Island, AL 36528}
\ead{jlehrter@disl.org}

\author{Lisa L. Lowe}
\address{Lockheed Martin IS \& GS - Civil supporting the USEPA, Research Triangle Park, NC 27709}
\ead{lowe.lisa@epa.gov}

\author{Brandon M. Jarvis}
\address{USEPA National Health and Environmental Effects Research Laboratory, Gulf Ecology Division, 1 Sabine Island Drive, Gulf Breeze, FL 32561}
\ead{jarvis.brandon@epa.gov}

\begin{abstract}
\noindent This study addresses quantitative limitations of coupled hydrodynamic-ecological models by evaluating parameter sensitivity and identifability of a \ac{zerod} unit of a larger spatio-temporal model of hypoxia on the \acl{lcs} of Gulf of Mexico.  A systematic framework is used to infer larger trends in dissolved oxygen dynamics over time, having implications for understanding factors that contribute to environmental conditions that are detrimental to aquatic resources.  In particular, we focus on issues of parameter identifiability using local sensitivity analyses to provide quantitative descriptions of numerical constraints on model precision.  The sensitivity of state variables differed considerably with parameter changes, although most variables were responsive to changes in parameters that influenced planktonic growth rates and less sensitive to physical or chemical parameters.  Variation in sensitivity had a direct correspendence with identifiability, such that only small subsets of the complete parameter set were characterized as having unique effects on the model output. As a result, we provide a set of parameter selection heuristics that can be used to identify parameters for model calibration that depend on relative sensitivity and ecological categories within the biogeochemical equations. Although these concerns have been expressed in the literature, they are rarely explicitly addressed or included in evaluations of water quality models.
\end{abstract}

\begin{keyword}
\ac{cgem}, \ac{gom}, Hypoxia, Identifiability, Sensitivity
\end{keyword}

\end{frontmatter}

\linenumbers
\acresetall

\section{Introduction}

Hypoxia formation in bottom waters of coastal oceans occurs primarily from excess nutrient inputs from land-based sources \citep{Justic87,Diaz95,Howarth96}.  These events are detrimental to aquatic organisms and have significant negative effects on economic resources derived from coastal ecosystems \citep{Lipton03,Diaz11}.  An understanding of the biological, physical, and chemical processes that contribute to the growth of hypoxic areas is a critical concern for mitigating and preventing these negative impacts.  Numerical ecosystem models are important tools that synthesize knowledge of ecosystem processes that contribute to hypoxia formation and for predicting the effects of proposed management activities or future scenarios \citep{Scavia04,Hagy07,Pauer16}.  Unlike statistical models with more generic structures, simulation and process-based models include explicit descriptions of relevant processes that are constrained by empirical or observational data relevant to the system of interest \citep[e.g.][]{Omlin01b,Eldridge10}.  These models are often coupled with hydrodynamic grids to provide spatially-explicit representations of patterns in three dimensions \citep{Warner05,Zhao10,Ganju16}. Combined hydrodynamic and bio-geo-chemical models have been developed specifically to describe hypoxic conditions on the \ac{lcs} in the northern \ac{gom} (\citealt{Fennel13,Obenour15,Pauer16}, \citetalias{LehrterIP}).  This area drains a significant portion of the continental United States through the \ac{marb} and is the second largest hypoxic area in the world \citep{Rabalais02}.  Understanding processes that contribute to the frequency and duration of hypoxic events remains a critical research goal for the region.  

The development and application of a model represents a tradeoff between characteristics expected from the output or provided by the structural components. An idealized model is sufficiently generalizable across systems, provides results that are precise given the inputs, and includes components that are realistic descriptions of actual processes \citep{Levins66}. Given that these characteristics cannot be simultaneously achieved, models are developed in partial dependence of reality and theoretical constructs, completely separate from both, or dependent on one or the other \citep{Morrison99,Ganju16}.  These challenges are analagous to the well-known bias-variance tradeoff in statistical models that balances the competing objectives of over- and under-fitting to an observed dataset. Process-based models are more commonly imbalanced between reality and theory, such that most are over-parameterized in an attempt to completely describe reality \citep{Denman03,Nossent12,Petrucci14}.  Quantitative limitations of over-parameterization are analagous to degrees of freedom in standard statistical models as free parameters cannot be numerically estimated when constrained to an observed dataset \citep{Kirchner06}.  More importantly, over-parameterization can limit use across systems outside of the data domain and impose uncertainty in model predictions as realistic values for every variable may not be known or inaccurately applied from existing studies \citep{Durand02,Refsgaard07,Wade08}.

Model precision can be evaluated relative to the effects of initial conditions or the observed data used for calibration, changes in parameter values, or variation in the structural components (i.e., observational, parameter, or structural uncertainty) \citep{Beck87}.  Evaluating effects of parameter changes is by far the most common and simplest approach.  Although sensitivity analyses should be integrated with model development, parameters are often evaluated post-hoc as a form of `damage control' for further calibration.  This approach is sometimes called inverse modelling where results from sensitivity analyses are used to guide calibration or fit of the developed model to observations (\citealt{Soetaert10}, or confronting models with data, \textit{sensu} \citealt{Hilborn97}).  Parameter sensitivity analysis combined with inverse modelling necessarily involves questions of parameter `identifiability'.  Redundancies in parameter effects lead to unidentifiable models where calibration is empirically impossible (i.e., standard algorithms will not converge) or parameter values may be non-unique leading to the right answer for the wrong reason \citep{Kirchner06}. Unidentifiable parameter sets have effects on model output that can be undone or compensated for by alteration of other parameters.  Identifiability issues are not foreign to hypoxia or eutrophication models  \citep{Omlin01,Estrada10,Mateus15}, although there is a clear need for greater integration of these concepts in practice \citep{Fasham06}.

This study describes a parameter sensitivity and identifiability analysis of a \ac{zerod} unit of a larger spatial-temporal model of hypoxia dynamics on the \ac{lcs}.  The objectives were to provide a statistical approach that demonstrates numerical limitations of parameter sets for model calibration and provide a framework for selecting parameters within the identifability constraints.  The specific goals were to \begin{inparaenum}[1\upshape)]
\item identify the parameters that have the greatest influence on state variables using local sensitivity analysis,
\item quantify the identifiability of subsets of the total parameter space based on sensitivity,
\item and provide a set of heuristics for choosing parameters based on sensitivity, identifiability, and parameter categories.
\end{inparaenum}
In addition to \ac{do}, other state variables that were evaluated included ammonium, \ac{chla}, irradiance, nitrate, \ac{pom}, \ac{dom}, and phosphorus. In general, we provide empirical results to support the assumption that models are generally over-parameterized and only a finite and smaller subset of the complete parameter set can be optimized. Although concerns of identifiability constraints have been shown in the literature, rulesets are not readily available that define how parameters should be selected given tradeoffs betwen precision, sensitivity, and identifiability, especially for biogeochemical models of ecosystem processes.

\section{Methods}

\subsection{Model description}

Hypoxic events, defined  as $<$2 mg L$^{-1}$ of \ac{do} ($<$ 64 mmol m$^{-3}$), occur seasonally in bottom waters in the northern \ac{gom}.  The hypoxic area averages 15,540 km$^2$ annually (1993-2015) with minimum concentrations observed from late spring to early fall.  Seasonal variation is strongly related to carbon and nutrient export from the \ac{marb} \citep{Lohrenz08,Bianchi10}, whereas hydrologic variation, currents, and wind patterns can affect vertical salinity gradients that contribute to the formation of hypoxia \citep{Wiseman97,Paerl98,Obenour15}. The \ac{cgem} was developed to describe hypoxia dynamics on the \ac{lcs} and includes elements from the Navy Coastal Ocean Model \citep{Martin00} for hydrodynamics and a biogeochemical model with multiple plankton groups, water-column metabolism, and sediment diagenesis \citep{Eldridge10}.  The hydrodynamic component of \ac{cgem} provides a spatially-explicit description of hypoxia using an orthogonal grid with an approximate horizontal resolution of 1.9 km$^2$ and twenty equally-spaced vertical sigma layers on the shelf.  The biogeochemical component includes equations for 36 state variables including six phytoplankton groups (with nitrogen and phosophorus quotas for each), two zooplankton groups, nitrate, ammonium, phosphate, dissolved inorganic carbon, oxygen, silica, and multiple variables for dissolved and particulate organic matter from different sources.

The core unit of \ac{cgem} is FishTank, a \ac{zerod} model that implements the biogeochemical equations in \citet{Eldridge10} and does not include any advection, mixing, or sediment diagenesis. Although FishTank was developed for specific application in \ac{cgem}, it can easily be applied to other hydrodynamic grids. Results are based on time-dependent differential equations that describe energy flow between phytoplankton and zooplankton groups given nutrient uptake rates, organic matter inputs and losses, inherent optical properties, and temperature (\citealt{Penta08,Eldridge10}, see appendix in \citetalias{LehrterIP}). A total of 108 equations are estimated at each time step to return values for each of the 36 state variables described by the model.  In addition to the initial conditions, 251 parameter values for each of the equations are also supplied at model execution. Values for each of the parameters were based on estimates from the literature, field or laboratory-based measurements, or expert knowledge in absence of the former.  As such, a sensitivity analysis of parameter values is warranted given that, for example, literature or field-based estimates may not apply under all scenarios or expert knowledge is not completely certain \citep{Refsgaard07}.

% number of parameters evaluated, total and by category
<<echo = FALSE>>=
p1z1pars <- par_tst()

# number of parameters in each category
nparms <- parcats2(as_df = TRUE) %>% 
  filter(shrt %in% p1z1pars) %>% 
  .$cats %>% 
  table %>% 
  as.list  
@

The sensitivity of state variables to perturbations of all relevant parameters for the 108 equations was estimated using a five minute timestep from January 1\textsuperscript{st} to December 31\textsuperscript{st}, 2006. Irrelevant parameters were removed for several reasons; parameters were not relevant for the \ac{zerod} model (i.e., hydrodynamic parameters), were considered physical constants, or had no effect given initial conditions.  Additionally, FishTank includes six phytoplankton and two zooplankton groups to add complexity in community structure and foodweb dynamics. To remove obvious redundancies, the sensitivity analyses were conducted using only one phytoplankton and one zooplankton group.  The final set that was evaluated included \Sexpr{length(p1z1pars)} parameters that were further grouped into one of six categories based on applicable biogeochemical components of the model: optics ($n = $ \Sexpr{nparms$Optics} parameters), organic matter (\Sexpr{nparms$`Organic Matter`}), phytoplankton (\Sexpr{nparms$Phytoplankton}), temperature (\Sexpr{nparms$Temperature}), and zooplankton (\Sexpr{nparms$Zooplankton}).  A full description of the model parameters is available as an appendix in \citetalias{LehrterIP}.  

\subsection{Local sensitivity analysis}

A local sensitivity analysis was performed by evaluating the change in state variables following perturbation of each parameter from its original value \citep{Soetaert10,RDCT17}. Parameters were individually perturbed by 50\% of the original values and sensitivity $S$ was estimated for each time step $i$ given a change for parameter $j$ as:

\begin{equation} \label{sijeqn}
S_{ij} = \frac{\partial y_i}{\partial \Theta_j}\cdot\frac{w_{\Theta_j}}{w_{y_i}}
\end{equation}

\noindent where the estimate is based on the change in the predicted value for response variable $y$ divided by the change in the parameter $\Theta_j$ multiplied by the quotient of scaling factors $w$ for each.  The scaling factors, $w_{\Theta_j}$ for the parameter $\Theta_j$ and $w_{y_i}$ for response variable $y_i$, were set as the default value of the unperturbed parameter and the predicted value of $y_i$ after perturbation \citep{Soetaert10}.  Scaling makes the estimates unitless to compare model sensitivity to parameters and state variables that differ in relative magnitude.  Sensitivity values for all $j$ parameters were summarized as a single value across the time series from $i = 1$ to $n$ as $L1$:

\begin{equation} \label{l1}
L1 = \sum|S_{ij}|/n
\end{equation}

All parameters for each of the six equation categories (optics, organic matter, phytoplankton, temperature, and zooplankton) that had non-zero $L1$ were retained for identifiability analysis.  

\subsection{Identifiability and selecting parameter subsets}

The collinearity index $\gamma$ provides a measure of potential redundancies in the response of a state variable to changes in parameter values.  The index measures the linear dependence between sensitivity functions (i.e., $S_i$ for $j$ parameters) described above for parameter subsets and was estimated from the minimum eigenvector of the cross-product of a selected sensitivity matrix \citep{Brun01,Omlin01}:

\begin{equation} \label{gameq}
\gamma = \frac{1} {\sqrt{ \min \left(\rm{EV}[\mathit{\hat{S}}^\top \mathit{\hat{S}}]\right)}}
\end{equation}

\noindent where $\gamma$ ranges from one to infinity for perfectly identifiable (orthogonal) or unidentifiable (perfectly collinear) parameter sets.  The sensitivity functions were supplied as a matrix $\hat{S}$ with rows $i$ and columns $j$ (\cref{sijeqn}) that described deviations of predicted \ac{do} following perturbations of each parameter.  Thus, $\gamma$ can be estimated from results for any subset of parameter combinations. Sensitivity matrices were first normalized by dividing by the square root of the summed residuals \citep{Omlin01,Soetaert10}. Estimates of $\gamma$ greater than 10-15 suggest parameter sets are poorly identifiable \citep{Brun01,Omlin01}, meaning parameter values that maximize precision on a calibration dataset are inestimable by conventional optimization algorithms. An intuitive interpretation of $\gamma$ is provided by \citet{Brun01}, such that a change in a state variable caused by a change in one parameter can be offset by the fraction $1 - 1/\gamma$ by the remaining parameters.  That is, $\gamma = 10$ suggests the relative change in \ac{do} for an arbitrary parameter in the selected set can be compensated for by 90\% with changes in the other parameters. 

Parameter selection for model calibration must consider the competing objectives of increased precision with parameter inclusion and reduced identifability as it relates to optimization.  An additional challenge is a large number of combinations of parameter sets, which complicates selection given sensitivity differences and desired ecological categories of each parameter (e.g., parameters for a group of related structural equations could be of interest).  \cref{fig:combnex} provides a simple graphic of the unique number of combinations that are possible for different subsets of `complete' parameter sets of different sizes (i.e., $n$ choose $k$ combinations, $n!/\left(k!\left(n-k\right)!\right)$).  The number of unique combinations increases with the total parameters in the set and is also maximized for moderate selections (e.g., selecting half the total).  For example, over 10$^{14}$ combinations are possible by selecting 25 parameters from a set of 50.

A set of heuristics was developed that addresses the tradeoff in model complexity and identifiability given the challenges described above \citep[see also][]{Wagener01}.  These rulesets were developed with the assumption that parameters will be selected with preference for those with high sensitivity and identifability based on $\gamma < 15$ as an acceptable threshold for subsets (e.g., 93\% accountability between parameters).  Selection heurestics also recognized that parameter categories (i.e., optics, organic matter, phytoplankton, temperature, zooplankton) may have unequal preferences by model users given questions of interest.  In all selection scenarios, parameters were selected by decreasing sensitivity starting with the most sensitive until identifiability did not exceed $\gamma = 15$ where selections were \begin{inparaenum}[1\upshape)]
\item blocked within parameter category,
\item independent of parameter category,
\item or considering all categories equally.
\end{inparaenum} The selection rules produced seven subsets of parameters that could further be used to optimize model calibration.

\subsection{Model calibration and extrapolation}

Selected parameter subsets from the seven heuristics were used to calibrate the \ac{zerod} model.  This analysis demonstrated that different parameter sets can produce model output with differing precision and calibration effort given 1) differences in variable sensitivity to parameters in each subset, 2) differences in the parameters selected from different categories (heuristic difference), and 3) differences in identifiability values.  Generally, this analysis was a proof of concept that the selection heuristics can lead to an `optimal' model by maximizing the balance between sensitivity and identifiability.  

A time series of \ac{do} from Weeks Bay, Alabama was used for model calibration.  Daily observations from January 1\textsuperscript{st},  2006 to January 1\textsuperscript{st}, 2007 at the Weeks Bay station of the Weeks Bay National Estuarine Reserve were used \citep{Wenner04}.  We chose this location because of the availability of data for model calibration compared to bottom waters in the northern \ac{gom} and the system exhibits hypoxia from eutrophication.  This application also provided a practical example of how the FishTank model could be calibrated using data from alternative locations.  Initial conditions for model input were modified to match conditions in Weeks Bay using observed water quality and nutrient data (all data from \url{http://cdmo.baruch.sc.edu/}).  The \ac{do} time series was filtered to reduce physical effects of the tidal advection component on the observed data (\textit{sensu} \citealt{Beck15b}).  As such, the filtered data were comparable to a time series with no physical advection to match conditions of the \ac{zerod} FishTank model with no hydrodynamic component. 

Each parameter subset was calibrated to most closely match the model output to the observed time series.  Parameter values were searched using the optim function in R that implemented the limited memory modification of the BFGS quasi-Newton method \citep{Byrd95,Nocedal06,RDCT17}.  This opimization scheme searches for values within the user-defined lower and upper bounds of each parameter.  We set the algorithm to search within +/- 50\% of the default parameter values.  While we recognize that `actual' parameter values could possibly be outside of this range, constraining the values to those tested herein was expected to produce output that was more interpretable within the context of the sensitivity functions defined above.  Moreover, precise limits on each parameter were less of a concern for the current analysis as our primary goal was to demonstrate differences in precision as a function of sensitivity and identifiability.  The optimal values for each parameter were identified based on convergence of the model results as a minimization of the root-mean squared error between the observed and modelled data.    

As a final analysis, effects of parameter changes on the larger 3-dimensional model were evaluated to demonstrate that results from the \ac{zerod} FishTank model can be extrapolated.  For simplicity, only the most sensitive parameter in each category was selected.  The \ac{cgem} model was run for one year using the default parameter conditions and by increasing each of the selected parameters by 50\%.  This produced six spatially-referenced time series from which the changes in the daily hypoxic area (number of cells $<$ 64 mmol \ac{do}) were estimated in the nothern \ac{gom}.

\section{Results}

% for inline
<<echo = FALSE, eval = T, cache = F>>=
data(sens_ests_cat_all)

# each state variable has:
#   txt: chr string for inline text of variable name
#   tot: total number of sensitive parameters
#   bycat: list of number of sensitive parameters in each category
#   lncat: list of percentage of sensitive parameters in each category
#   sensrng: tibble with min/max sensitivity across categories
#   sensrngcat: list of tibbles with min/max sensitivity within categories
#   sensave: numeric of overall sensitivity
#   sensavecat; list of average sensitivity by categories
loc <- loc_summ(sens_ests_cat_all)
locO2 <- loc$O2
locO2$sensavecat <- lapply(locO2$sensavecat, scinot)
locO2$sensave <- scinot(locO2$sensave)

@
 
\subsection{Local sensitivity analysis}

Local sensitivity analyses showed that \ac{do} was sensitive to perturbations in \Sexpr{locO2$tot} of the \Sexpr{length(p1z1pars)} (\Sexpr{round(100 * locO2$tot/length(p1z1pars), 0)}\% of total) parameters that were evaluated in FishTank (\cref{fig:sensalltile}, \cref{tab:dosens}). Within each parameter category, \ac{do} was sensitive to \Sexpr{locO2$bycat$Optics} parameters for optics (\Sexpr{locO2$lncat$Optics} of all optic parameters), \Sexpr{locO2$bycat$`Organic Matter`} for organic matter (\Sexpr{locO2$lncat$`Organic Matter`}), \Sexpr{locO2$bycat$Phytoplankton} for phytoplankton (\Sexpr{locO2$lncat$Phytoplankton}), \Sexpr{locO2$bycat$Temperature} for temperature (\Sexpr{locO2$lncat$Temperature}), and \Sexpr{locO2$bycat$Zooplankton} for zooplankton (\Sexpr{locO2$lncat$Zooplankton}). Although \ac{do} had the greatest sensitivity to parameters in the zooplankton category (as percentage of total), the relative effects varied. Among all parameters, average sensitivity was $L1 = $ \Sexpr{locO2$sensave} with values ranging from $L1 = $ \Sexpr{locO2$sensrng$error[1]} for \Sexpr{locO2$sensrng$Parameter[1]} (\Sexpr{tolower(locO2$sensrng$Category[1])}) to \Sexpr{locO2$sensrng$error[2]} for \Sexpr{locO2$sensrng$Parameter[2]} (\Sexpr{tolower(locO2$sensrng$Category[2])}). Within categories (excluding temperature with one sensitive parameter), sensitivity ranged from \Sexpr{locO2$sensrngcat$Optics$error[1]} (\Sexpr{locO2$sensrngcat$Optics$Parameter[1]}) to \Sexpr{locO2$sensrngcat$Optics$error[2]} (\Sexpr{locO2$sensrngcat$Optics$Parameter[2]}) for optics, \Sexpr{locO2$sensrngcat$`Organic Matter`$error[1]} (\Sexpr{locO2$sensrngcat$`Organic Matter`$Parameter[1]}) to \Sexpr{locO2$sensrngcat$`Organic Matter`$error[2]} (\Sexpr{locO2$sensrngcat$`Organic Matter`$Parameter[2]}) for organic matter, \Sexpr{locO2$sensrngcat$Phytoplankton$error[1]} (\Sexpr{locO2$sensrngcat$Phytoplankton$Parameter[1]}) to \Sexpr{locO2$sensrngcat$Phytoplankton$error[2]} (\Sexpr{locO2$sensrngcat$Phytoplankton$Parameter[2]}) for phytoplankton, and \Sexpr{locO2$sensrngcat$Zooplankton$error[1]} (\Sexpr{locO2$sensrngcat$Zooplankton$Parameter[1]}) to \Sexpr{locO2$sensrngcat$Zooplankton$error[2]} (\Sexpr{locO2$sensrngcat$Zooplankton$Parameter[2]}) for zooplankton (\cref{tab:dosens}).  Average sensitivity values in each category were $L1 = $ \Sexpr{locO2$sensavecat$Optics} for optics, \Sexpr{locO2$sensavecat$`Organic Matter`} for organic matter, \Sexpr{locO2$sensavecat$Temperature} for temperature, \Sexpr{locO2$sensavecat$Phytoplankton} for phytoplankton, and \Sexpr{locO2$sensavecat$Zooplankton} for zooplankton.

<<echo = F>>=
locChla_mg_tot <- loc$Chla_mg_tot
locirradiance <- loc$irradiance
locNH4 <- loc$NH4
locNO3 <- loc$NO3
locOM1 <- loc$OM1
locOM2 <- loc$OM2
locPO4 <- loc$PO4

# average sensitivities for all
aveall <- lapply(loc, function(x){
  out <- x$sensave
  names(out) <- x$txt
  out
  }) %>% 
  unlist %>% 
  sort
names(aveall) <- gsub('^.*\\.', '', names(aveall))

# parameter category with highest average sensitivity for each st var
maxcat <- lapply(loc, function(x){

  out <- x$sensavecat %>% 
    unlist %>% 
    .[which.max(.)]
  
  nms <- tolower(names(out))
  out <- scinot(out)
  names(out) <- nms
  out
  
})

# average parameter sensitivity for categories, independent of state variables
avecat <- do.call('rbind', sens_ests_cat_all) %>% 
  split(.$Category) %>% 
  lapply(function(x) mean(x$error)) %>% 
  unlist %>% 
  sort %>% 
  sapply(scinot)
names(avecat) <- tolower(names(avecat))

@

Local sensitivity analyses for the additional state variables (ammonium, \ac{chla}, irradiance, nitrate, \ac{pom}, \ac{dom}, and phosphorus) had similar results as \ac{do} with some exceptions (\cref{fig:sensalltile,tab:nh4sens,tab:chlsens,tab:irrsens,tab:no3sens,tab:om1sens,tab:om2sens,tab:po4sens}).  All variables were sensitive to the same parameters as \ac{do} (\Sexpr{locO2$tot} of \Sexpr{length(p1z1pars)} evaluated), although average sensitivity differed between variables.  Average $L1$ ranged from \Sexpr{scinot(aveall[2])} for \Sexpr{names(aveall)[2]} (\cref{tab:irrsens}) to \Sexpr{scinot(aveall[length(aveall)])} for \Sexpr{names(aveall)[length(aveall)]} (\cref{tab:om2sens}).  All average sensitivity values for the state variables were higher than the average for \ac{do} ($L1$ = \Sexpr{scinot(aveall[1])}).  For each variable, $L1$ ranged from \Sexpr{locNH4$sensrng[1, 2]} (\Sexpr{locNH4$sensrng[1, 1]}) to \Sexpr{locNH4$sensrng[2, 2]} (\Sexpr{locNH4$sensrng[2, 1]}) for ammonium (\cref{tab:nh4sens}), \Sexpr{locChla_mg_tot$sensrng[1, 2]} (\Sexpr{locChla_mg_tot$sensrng[1, 1]}) to \Sexpr{locChla_mg_tot$sensrng[2, 2]} (\Sexpr{locChla_mg_tot$sensrng[2, 1]}) for \ac{chla} (\cref{tab:chlsens}), \Sexpr{locirradiance$sensrng[1, 2]} (\Sexpr{locirradiance$sensrng[1, 1]}) to \Sexpr{locirradiance$sensrng[2, 2]} (\Sexpr{locirradiance$sensrng[2, 1]}) for irradiance (\cref{tab:irrsens}), \Sexpr{locNO3$sensrng[1, 2]} (\Sexpr{locNO3$sensrng[1, 1]}) to \Sexpr{locNO3$sensrng[2, 2]} (\Sexpr{locNO3$sensrng[2, 1]}) for nitrate (\cref{tab:no3sens}), \Sexpr{locOM1$sensrng[1, 2]} (\Sexpr{locOM1$sensrng[1, 1]}) to \Sexpr{locOM1$sensrng[2, 2]} (\Sexpr{locOM1$sensrng[2, 1]}) for \ac{pom} (\cref{tab:om1sens}),  \Sexpr{locOM2$sensrng[1, 2]} (\Sexpr{locOM2$sensrng[1, 1]}) to \Sexpr{locOM2$sensrng[2, 2]} (\Sexpr{locOM2$sensrng[2, 1]}) for \ac{dom} (\cref{tab:om2sens}), and \Sexpr{locPO4$sensrng[1, 2]} (\Sexpr{locPO4$sensrng[1, 1]}) to \Sexpr{locPO4$sensrng[2, 2]} (\Sexpr{locPO4$sensrng[2, 1]}) for phosphate (\cref{tab:po4sens}).  For the parameter categories, ammonium was most sensitive to \Sexpr{names(maxcat$NH4)} parameters (average $L1$ = \Sexpr{maxcat$NH4} across all parameters in the category), \ac{chla} to \Sexpr{names(maxcat$Chla_mg_tot)} ($L1$ = \Sexpr{maxcat$Chla_mg_tot}), irradiance to \Sexpr{names(maxcat$irradiance)} ($L1$ = \Sexpr{maxcat$irradiance}), nitrate to \Sexpr{names(maxcat$NO3)} ($L1$ = \Sexpr{maxcat$NO3}), \ac{pom} to \Sexpr{names(maxcat$OM1)} ($L1$ = \Sexpr{maxcat$OM1}), \ac{dom} to \Sexpr{names(maxcat$OM2)} ($L1$ = \Sexpr{maxcat$OM2}), and phosphate to \Sexpr{names(maxcat$PO4)} ($L1$ = \Sexpr{maxcat$PO4}).  Finally, average sensitivity between parameter categories independent of the state variables ranged from \Sexpr{avecat[1]} for \Sexpr{names(avecat)[1]} (average $L1$ across all variables) to \Sexpr{avecat[length(avecat)]} for \Sexpr{names(avecat)[length(avecat)]}. 

\subsection{Identifiability of parameter subsets and selection rules}

<<eval = T>>=
data(cat_ident_all)
data(top_ident_all)

# percent combos less than gamma 15, 10 by state variable, by parameter category
# temperature category not evaluated, only one paramaeter
collcatpers <- lapply(cat_ident_all, function(stvar){
  
  lapply(stvar[!names(stvar) %in% 'Temperature'], function(x){

    colls <- x$coll
    l15 <- scinot(100 * sum(colls < 15)/length(colls), digits = 1)
    l10 <- scinot(100 * sum(colls < 10)/length(colls), digits = 1)
    c(l15, l10)

  })
  
})

# percent combos less than gamma 15, 10 by state variable, by top in each category
colltoppers <- lapply(top_ident_all, function(stvar){
  
  lapply(stvar, function(x){

    colls <- x$coll
    l15 <- scinot(100 * sum(colls < 15)/length(colls), digits = 1)
    l10 <- scinot(100 * sum(colls < 10)/length(colls), digits = 1)
    c(l15, l10)

  })
  
})

catpersO2 <- collcatpers$O2
toppersO2 <- colltoppers$O2
@

The identifiability analyses suggested that many parameter subsets exceeded the thresholds of $\gamma = 10, 15$.  Parameter identifiability for \ac{do} decreased (increasing $\gamma$) at different rates with increasing size of parameter subsets depending on the parameter category or the number of top parameters that were selected (\cref{fig:identplo}). By category, identifiability was lowest for all combinations of parameter subsets in the phytoplankton (\Sexpr{catpersO2$Phytoplankton[1]}\% of subsets less than $\gamma = 15$, \Sexpr{catpersO2$Phytoplankton[2]}\% less than $\gamma = 10$) and zooplankton categories (\Sexpr{catpersO2$Zooplankton[1]}\% less than $\gamma = 15$, \Sexpr{catpersO2$Zooplankton[2]}\% less than $\gamma = 10$), whereas all combinations were identifiable for optics (\Sexpr{catpersO2$Optics[1]}\% less than $\gamma = 15, 10$) and a majority identifiable for organic matter (\Sexpr{catpersO2$`Organic Matter`[1]}\% less than $\gamma = 15$, \Sexpr{catpersO2$`Organic Matter`[2]}\% less than $\gamma = 10$). Identifiability for parameters in the temperature category was not evaluated because \ac{do} was sensitive to only one parameter (i.e., $\gamma = 1$). Parameter combinations for choosing from the top, top two, top three, and top four parameters in each category together had decreasing identifability with the increasing size of the selection pool (e.g., top one versus top four parameters, \cref{fig:identplo}).  The percentage of parameter subsets that were below the acceptable thresholds for identifability was \Sexpr{toppersO2$top1[1]}\% less than $\gamma = 15, 10$ for the top parameter in each category, \Sexpr{toppersO2$top2[1]}\% and \Sexpr{toppersO2$top2[2]}\% for the top two, \Sexpr{toppersO2$top3[1]}\% and \Sexpr{toppersO2$top3[2]}\% for the top three, and \Sexpr{toppersO2$top4[1]}\% and \Sexpr{toppersO2$top4[2]}\% for the top four.  Results for the remaining state variables had similar patterns in identifiability with increasing size of parameter subsets and selection categories, although differences in identifiabiltiy between state variables was observed (\cref{fig:identploall}).  Most notably, nitrate was consistently the least identifiable variable (highest overall $\gamma$), whereas \ac{do} was most identifiable.

An alternative view of the results in \cref{fig:identplo} can be used to demonstrate the effects of parameter selection criteria and number of parameters in the selection pool on identifiability.  \Cref{fig:percthresh} shows the percentage of identifiable parameter sets for \ac{do} using the same selection criteria in \cref{fig:identplo}, i.e., selection of parameters only within parameter categories and selection of the top sensitive parameters regardless of category.  \Cref{fig:percthresh} is similar to \cref{fig:identplo}, with the added effect of a chosen $\gamma$ threshold on identifability.  Previous studies have provided only general rules for $\gamma$ thresholds \citep{Brun01,Omlin01}, such that exact values for which parameter sets are inestimable likely vary between models and optimization methods.  As such, multiple values are shown in \cref{fig:percthresh}  given that actual thresholds could vary in practice. In general, identifiability decreased with the addition of parameters, although the rate of decrease depended on the selected threshold for $\gamma$. More conservative values for $\gamma$ (e.g., $\gamma = 5$) were more sensitive to the number of parameters in a subset, that is, identifiability decreased more quickly with the addition of parameters at lower $\gamma$ thresholds as compared to higher $\gamma$.  Notable differences in identifiability were also observed by parameter selection criteria (within categories or top parameters only), which further supports results in \cref{fig:identplo,fig:identploall}.    

<<eval = T>>=
om_coll <- par_txt(paste0(c('KG1', 'KG2', 'KGcdom', 'KNH4', 'KNO3', 'KO2', 'KstarO2', 'nitmax'), '_1'))
@

An evaluation of the effects of individual parameters on $\gamma$ suggested that some parameters had disproportionate effects on identifiability.  Based on $\gamma = 15$, \cref{fig:identplo} suggests that most parameter sets for organic matter were identifiable, regardless of how many parameters were selected (i.e., two through eight).  However, some subsets were not identifiable such that identification of one or more redundant parameters that are inflating $\gamma$ values could provide useful information.  \Cref{fig:exclex} shows an alternative view of identifiability of \ac{do} with exclusion and inclusion of individual parameters in different sets for the organic matter category.  As before, collinearity increases with more parameters in a subset, although the increase varies depending on which parameter was included or excluded from the set.  For example, inclusion of \Sexpr{om_coll[5]} in a parameter set almost always inflated $\gamma$.  All parameter subsets that did not include \Sexpr{om_coll[5]} were well below $\gamma = 15$, suggesting that exclusion of this parameter improves identifiability.  Interestingly, the inclusion of some parameters caused a reduction in $\gamma$, which contradicts the general rule that more parameters caused reduced identifiablity.  For example, parameter sets that included \Sexpr{om_coll[3]} generally had lower $\gamma$ values relative to those that excluded the parameter.

<<eval = T>>=
data(tocal_all)
 
# average number of parmaeters in each category for first heurist
# independent of state variable
catave <- lapply(tocal_all, 
  function(x){
  
    x$cat %>% 
    group_by(Category) %>% 
    summarise(cnt = sum(coll < 15))
  
  }) %>% 
  reshape2::melt(., id.var = names(.[[1]])) %>% 
  group_by(Category) %>% 
  summarise(cnt = mean(cnt)) %>% 
  arrange(cnt) %>% 
  mutate(
    Category = tolower(Category),
    cnt = round(cnt, 2)
    ) %>% 
  arrange(cnt)

@
Results for each of the three selection heuristics (blocked by parameter category, independent of category, all categories equally) applied to each state variable differed in the number of selected parameters and distribution of parameters within each category (\cref{tab:heurist1,tab:heurist2,tab:heurist3}).  In general, a corresponendence was observed between the number of parameters that were selected given the threhold of $\gamma = 15$ and relative identifiability between the state variables.  As noted above, nitrate was the least identifiable variable (\cref{fig:identploall}), whereas other variables (e.g., \ac{do}, irradiance) were more identifiable.  The constraints on identifiability between variables were demonstrated with the selection heuristics.  For example, heuristics for nitrate typically selected only one or two parameters that met the criteria as compared to more identifiable variables that included several parameters. Overall, the first selection heuristic demonstrated that the number of parameters chosen by parameter category differed independently of the state variables (\cref{tab:heurist1}). The number of selected parameters averaged across state variables in decreasing order was \Sexpr{catave[4, 2]} parameters from the \Sexpr{catave[4, 1]} category, \Sexpr{catave[3, 2]} from \Sexpr{catave[3, 1]}, \Sexpr{catave[2, 2]} from \Sexpr{catave[2, 1]}, and \Sexpr{catave[1, 2]} from \Sexpr{catave[1, 1]}. The second and third selection heuristics (\cref{tab:heurist2,tab:heurist3}) were similar, although more parameters were generally selected for the third heuristic given equal importance between categories.

\subsection{Model calibration and extrapolation}

Calibration of parameter values for each of the seven selection heuristics produced model output that varied in precision and computational effort to identify optimal values.  The seven evaluated subsets were those for \ac{do} in each of the four categories of parameters in \cref{tab:heurist1}, including the single parameter for temperature.  The subsets in \cref{tab:heurist2,tab:heurist3} for the parameters selected independent of category and equally within each category were also evaluated.
<<>>=
NULL
@

% starting rmse of model without calibration
\cref{fig:areachg}
% does overall area change correlate with degree of sensitivity?  

\section{Discussion}

\subsection{Implications of sensitivity and identifiability analyses}

Common goals in the application of biogeochemical models of ecosystem processes are to \begin{inparaenum}[1\upshape)]
\item accurately describe the system by matching predictions with observed data \citep{Reckhow90}, and 
\item provide a means of forecasting ecosystem condition with hypothesized management or environmental scenarios \citep{Clark01}. 
\end{inparaenum}
Although these objectives are the focus of most applications, the structural components of process-based models should secondarily provide inference into which ecosystem processes and functions are driving observed changes.  This latter objective represents a more generic scientific purpose of biogeochemical models that extends beyond the applied benefits of describing and predicting change in a particular system.  Modelers often hope to identify universal principles that govern dynamics across systems and the constraint of model parameters to observations provides a means of supporting or refuting hypotheses \citep{Kirchner06}.  Extension of these principles to test the effects of structural changes and observation uncertainty on model predictions provides further information to support validation of model components. This study provided a simple approach to use the effects of parameter perturbations on model state variables to characterize identifiable parameter subsets that vary by parameter selection criteria.  By doing so, we demonstrated that small parameter subsets relative to all sensitive parameters were within the identifiability thresholds described in the literature.  The identifiable parameter subsets varied considerably between state variables and the method for parameter selection.  In general, these results provide justification for the use of explicit parameter selection heuristics that practitioners should adopt to facilitate model calibration.

State variables were most sensitive to parameters in the phytoplankton and zooplankton categories, particularly the maximum growth rates (\Sexpr{par_txt('umax_1')} for phytoplankton, \Sexpr{par_txt('Zumax_1')} for zooplankton), mortality coefficient for phytoplankton (\Sexpr{par_txt('mA_1')}), and the zooplankton half saturation coefficent for grazing (\Sexpr{par_txt('ZKa_1')}). An increase in the growth rate of primary producers has the potential to increase oxygen concentration through photosynthetic processes, although increased production of organic matter is balanced with respiration and bacterial decomposition that reduce \ac{do} in the water column.  Similarly, increases in zooplankton abundance with increased growth rates causes a reduction in phytoplankton biomass through grazing, which is expected to further deplete pools of organic matter.  Most variables were also sensitive to variation in the half-saturation grazing coefficient which moderates the concentration of nutrients that support half the maximum grazing rate. Although the tradeoff between abundance, grazing, and decomposition is complex, the sensitivity of model state variables to parameters that directly control the abundance of primary producers is in agreement with empirical observations of factors that influence hypoxia dynamics on the \ac{lcs} \citep{Fahnenstiel95,Roelke00,Eldridge10}. The sensitivity of the model output to variation in other parameters that relate to physical and chemical properties of the system was of secondary importance to biological relationships.  That is, state variables were sensitive to changes in light and temperature parameters, although to a lesser extent than phytoplankton and zooplankton parameters.  As such, the differing sensitivities of state variables to parameters in each of the categories was not unexpected given general ecological relationships that are well understood and described by the model.    

A general conclusion from the identifiability analyses is that only limited subsets of parameters were identifiable within the constraints of local sensitivity analyses. These results support previous studies that have suggested similarly small subsets of parameters can be identified using traditional calibration schemes \citep[e.g.,][]{Wheater86,Ye97,Omlin01}.  In addition to \ac{cgem}, these conclusions have relevance for many biogeochemical models that include numerous parameters and structural equations to characterize processes in the model domain.  A general conclusion is that perhaps a trend towards less complex models could be beneficial given that only a small subset of parameters is identifiable and that ecosystem processes may in fact be sufficiently characterized with few parameters \citep{Ye97}.  Conversely, others have argued that model complexity is not in itself a disadvantage when parsimony is not the sole arbitrator of model structure \citep{Reichert97}. Over-parameterization can be useful if processes have importance that were not evaluated during model identification.  Single objective functions that maximize model precision with identifiable parameters may also provide an incomplete characterization of model worth, which has prompted the development of probability-based models of hypoxia that explicitly include uncertainty in model components \citep[e.g.][]{Obenour15}.  Our results demonstrated that approximately 75\% of the evaluated parameters had an effect on the eight state variables, whereas \ac{cgem} includes a total of 36 variables and multiple plankton groups, not all of which have immediate concern for understanding hypoxia. The redundancies identified with the sensitivity analyses are only problematic if the primary interest is, for example, \ac{do} dynamics.  Moreover, the proposed selection heuristics provide flexibility for choosing different parameters with the assumption that those chosen depend on the research or management question. 

Results from the identifiability analyses provided additional insight into the interactions of parameters in large biogeochemical models.  First, identifiability of parameter subsets was not related to the sensitivity of individual variables. As noted above, an identifiable parameter is one that has a unique effect on model predictions that cannot be compensated for or undone by changing other parameters. The magnitude of the effect of a parameter has no bearing on identifiability, which further complicates the selection of parameters for calibration.  Although identifiability is the primary limiting factor in choosing a set, the relative sensitivities are more important for the decision to include or exclude individual parameters.  Our analysis addressed this challenge by presenting multiple selection criteria for identifiable parameter sets that prioritized the most sensitive parameters during the selection process.  Similarly, identifability was not always related to the number of parameters in a set. Although the overwhelming trend was decreasing identifiability with more parameters, the unique effects of including an individual parameter with an existing set often reduced the $\gamma$ estimate. For example, \cref{fig:exclex} shows that including \Sexpr{par_txt('KGcdom_1')}, \Sexpr{par_txt('KO2_1')}, or \Sexpr{par_txt('nitmax_1')} in parameter sets more often reduced $\gamma$ relative to sets that excluded the parameters.  These examples demonstrate the complex interactions of parameter changes on variable response, highlighting the need to consider the combined and individual effects of parameters on identifiability. The selection criteria proposed in our above analyses can facilitate parameter selection and also provide diagnostic tools to identify parameters with disproportionate effects on $\gamma$.

\subsection{Recommendations and conclusions}

An evaluation of sensitivity and identifiability of relevant parameter sets is a preliminary and simplistic approach to improving model predictions.  In general, uncertainty analyses that lead to improved models are ultimately expected to increase our understanding of properties defining ecological relationships.  The extension of simple parameter sensitivity analyses to the generalization of ecosystem properties requires additional analysis and potential model refinement, at the core of which is the balance between generality and precision. The utility of a specific model depends on the question and objective for application to a specific system.  For the above analysis, the FishTank model, as part of the larger \ac{cgem} application, was evaluated in the context of hypoxia effects on ecosystem condition and function.  At the core of the simple model is a set of biogeochemical equations that characterize the system in relation to planktonic groups, nutrient requirements, and water-column metabolism.  Our results have shown that relatively small subsets of parameters are identifiable given the complexity of the model, and as a result, we have provided a general approach to select parameter subsets depending on the ecological context (i.e., selection by parameter category, selection for specific state variables).  Thus, the results described above have relevance for further model refinement with the specific goal of better understanding ecological dynamics that moderate hypoxia on the northern \ac{gom}.  However, the general principles of sensitivity and parameter identifiability have broad applicability beyond this context and we argue that such methods should be more universally applied as an initial approach to quantify numerical constraints of biogeochemical models.  

Specific approaches can be used to improve and build on the results presented herein, in addition to the more general considerations above. An evaluation of model precision following calibration with relevant parameter subsets could provide additional information that supports results from the sensitivity analyses.  For simplicity, our analysis did not calibrate model parameters and an explicit assumption was that parameter subsets with $\gamma$ below 10 or 15 were identifiable.  To our knowledge, this threshold has not been rigorously evaluated and it is likely to vary between parameter subsets and the chosen calibration method.  Variation in parameter estimates given the calibration method and different identifiability thresholds could affect the interpration of model output.  Further, how results for the \ac{zerod} model extrapolate to the larger three-dimensional model should be evaluated.  Although the above analyses were facilitated using the \ac{zerod} model (i.e, quick execution times, ease of changing model parameters), lack of physical transport or spatial components potentially limits extrapolation of the results. Variation in parameter estimates at lower dimensions could be magnified as errors propagate to larger scales or site-specific observations for model calibration are not appropriate across a hydrodynamic grid \citep{Harvey00,Lehrter10}. The effects of structural or observational uncertainty should also be evaluated in the context of the larger model.  Our simple approach to examine changes in the initial conditions and switches used in the model showed that sensitivity estimates of individual parameters differed relative to the original model configuration, having further implications for characterizing identifiability.
\clearpage

\bibliography{refs}
% \bibliography{refsshr}
\clearpage

%%%%%%
% tables

\invisiblesection{Tables}

% do sensitivity all categories
<<dosens, eval = T, cache = F>>=
senstab(out_var = 'O2', tablab = 'dosens', captxt = '\\ac{do}', digits = 2, pow = 2, tabsize = 'footnotesize', foot.val = '\\footnotesize *Temperature parameters apply separately to phytoplankton ($p1$, one group) or zooplankton ($z1$, one group), denoted by subscripts')
@

% first heuristic, all states
<<heurist1, eval = T, cache = F>>=
data(tocal_all)

# factor levels
cats_lev <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton')
cats_lab <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton')
stts_lev <- rev(c('NH4', 'Chla_mg_tot', 'O2', 'irradiance', 'NO3', 'OM1', 'OM2', 'PO4'))
stts_lab <- rev(c('Ammonium', 'Chlorophyll', 'Dissolved Oxygen', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate'))

# format tocal_all for identifiability table
totab <- lapply(tocal_all, function(x) x$cat) %>% 
  reshape2::melt(., id.var = names(.[[1]])) %>%
  mutate(Parameter = as.character(Parameter)) %>%
  mutate(
    stts = factor(L1, levels = stts_lev, labels = stts_lab),
    Category = factor(Category, levels = cats_lev, labels = cats_lab), 
    Parameter = par_txt(Parameter, frm = 'tex')
  ) %>% 
  split(., .$L1) %>% 
  lapply(function(x){
    
    sel <- which(x$coll < 15)
    x <- x[sel, ] %>% 
      
    # x <- x[c(sel, max(sel) + 1), ] %>% 
      na.omit
    x
    
  }) %>% 
  do.call('rbind', .) %>%
  mutate(
    coll = sapply(coll, scinot), 
    Rank = rnk_incat
    ) %>%
  group_by(stts) %>% 
  nest %>% 
  unnest %>% 
  select(stts, Category, Parameter, Rank, coll) %>%
  mutate(
    stts = as.character(stts),
    Parameter = paste0('\\scriptsize{', Parameter, '}')
    ) %>% 
  spread(stts, coll, fill = '-') %>% 
  group_by(Parameter) %>% 
  arrange(Category, Rank)
totab <- totab[, c('Category', 'Parameter', 'Rank', rev(stts_lab))]
    
# final table formatting
parms <- totab$Parameter
cats <- as.character(totab$Category)
cap_val<- 'Parameter identifiability (as $\\gamma$, \\cref{gameq}) by category for relevant state variables.  Selections followed the first heuristic where parameters were selected within categories from most to least sensitive until $\\gamma > 15$.  Rank describes the relative parameter sensitivity in each category for each state variable. Duplicate parameters and ranks in the first two columns apply only to $\\gamma$ values in the same row (i.e., parameter ranks vary for each variable).'
colnms <- c('Rank', 'Ammonium', 'Chl-\\textit{a}', 'O$_2$', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate')

latex( 
  totab[, -c(1, 2)],
  file = '',
  rowlabel = 'Parameter',
  caption = cap_val,
  caption.loc = 'top',
  size = 'scriptsize',
  label = 'tab:heurist1',
  rowname = parms,
  rgroup = unique(cats),
  n.rgroup = as.numeric(table(cats)),
  colheads = colnms
  )
@

% second heuristic, all states
<<heurist2, eval = T, cache = F>>=
data(tocal_all)

# factor levels
cats_lev <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton')
cats_lab <- c('O', 'OM', 'P', 'T', 'Z')
stts_lev <- rev(c('NH4', 'Chla_mg_tot', 'O2', 'irradiance', 'NO3', 'OM1', 'OM2', 'PO4'))
stts_lab <- rev(c('Ammonium', 'Chlorophyll', 'Dissolved Oxygen', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate'))

# format tocal_all for identifiability table
totab <- lapply(tocal_all, function(x) x$top) %>% 
  reshape2::melt(., id.var = names(.[[1]])) %>%
  mutate(Parameter = as.character(Parameter)) %>% 
  mutate(
    stts = factor(L1, levels = stts_lev, labels = stts_lab),
    Category = factor(Category, levels = cats_lev, labels = cats_lab), 
    Parameter = par_txt(Parameter, frm = 'tex')
  ) %>% 
  filter(coll < 15) %>% 
  mutate(
    coll = sapply(coll, scinot), 
    Rank = sapply(rnk_incat, scinot), 
    Rank = paste0(Rank, '\\textsubscript{', Category, '}')
    ) %>%
  select(stts, Selected, Parameter, error, Rank, coll) %>%
  mutate(
    stts = as.character(stts),
    Parameter = paste0('\\scriptsize{', Parameter, '}')
    ) %>% 
  arrange(stts, Selected) %>% 
  rename(L1 = error) %>% 
  mutate(L1 = sapply(L1, scinot))
    
# final table formatting
stts <- as.character(totab$stts)
sels <- totab$Selected
cap_val<- 'Parameter identifiability (as $\\gamma$, \\cref{gameq}) for relevant state variables.  Selections followed the second heuristic where parameters were selected independent of category from most to least sensitive (L1, \\cref{l1}), until $\\gamma > 15$.  Rank describes the relative parameter sensitivity in each category for each state variable (O: optics, OM: organic matter, P: phytoplankton, T: temperature, Z: zooplankton).'
colnms <- c('Parameter', 'L1', 'Rank', '$\\gamma$')

latex( 
  totab[, -c(1, 2)],
  file = '',
  rowlabel = 'Selections by state variable',
  caption = cap_val,
  caption.loc = 'top',
  size = 'scriptsize',
  label = 'tab:heurist2',
  rowname = sels,
  rgroup = unique(stts),
  n.rgroup = as.numeric(table(stts)),
  colheads = colnms
  )
@

% third heuristic, all states
<<heurist3, eval = T, cache = F>>=
data(tocal_all)

# factor levels
cats_lev <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton')
cats_lab <- c('O', 'OM', 'P', 'T', 'Z')
stts_lev <- rev(c('NH4', 'Chla_mg_tot', 'O2', 'irradiance', 'NO3', 'OM1', 'OM2', 'PO4'))
stts_lab <- rev(c('Ammonium', 'Chlorophyll', 'Dissolved Oxygen', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate'))

# format tocal_all for identifiability table
totab <- lapply(tocal_all, function(x) x$cattop) %>% 
  reshape2::melt(., id.var = names(.[[1]])) %>%
  mutate(Parameter = as.character(Parameter)) %>% 
  mutate(
    stts = factor(L1, levels = stts_lev, labels = stts_lab),
    Category = factor(Category, levels = cats_lev, labels = cats_lab), 
    Parameter = par_txt(Parameter, frm = 'tex')
  ) %>% 
  filter(coll < 15) %>% 
  mutate(
    coll = sapply(coll, scinot), 
    Rank = sapply(rnk_incat, scinot), 
    Rank = paste0(Rank, '\\textsubscript{', Category, '}')
    ) %>%
  select(stts, Selected, Parameter, error, Rank, coll) %>%
  mutate(
    stts = as.character(stts),
    Parameter = paste0('\\scriptsize{', Parameter, '}')
    ) %>% 
  arrange(stts, Selected) %>% 
  rename(L1 = error) %>% 
  mutate(L1 = sapply(L1, scinot))
    
# final table formatting
stts <- as.character(totab$stts)
sels <- totab$Selected
cap_val<- 'Parameter identifiability (as $\\gamma$, \\cref{gameq}) for relevant state variables.  Selections followed the third heuristic where parameters were selected equally within each category from most to least sensitive (L1, \\cref{l1}), until $\\gamma > 15$.  Rank describes the relative parameter sensitivity in each category for each state variable (O: optics, OM: organic matter, P: phytoplankton, T: temperature, Z: zooplankton).'
colnms <- c('Parameter', 'L1', 'Rank', '$\\gamma$')

latex( 
  totab[, -c(1, 2)],
  file = '',
  rowlabel = 'Selections by state variable',
  caption = cap_val,
  caption.loc = 'top',
  size = 'scriptsize',
  label = 'tab:heurist3',
  rowname = sels,
  rgroup = unique(stts),
  n.rgroup = as.numeric(table(stts)),
  colheads = colnms
  )

@

% calibration table, do
<<calib, eval = T, cache = F>>=

library(tidyverse)
library(lubridate)
source("R/funcs.R")

load(file = 'data/tocal_all.RData')
load(file = 'data/cals.RData')

# starting rmse
strt <- cals[[1]]$mat[1,] %>% 
  .[length(.)]
# 72.13955 

idpars <- get_cmbs(tocal_all, 'O2', coll = T, errs = T, pert = 0.5) 

colerr <- get_cmbs(tocal_all, 'O2') %>% 
  lapply(function(x) c(x$coll, mean(x$errs), length(x$errs))) %>% 
  do.call('rbind', .) %>% 
  data.frame %>% 
  rownames_to_column %>% 
  rename(
    heurist = rowname, 
    coll = X1,
    avee = X2,
    nprm = X3
  )

levs <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton', 'top', 'cattop')
labs <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Temperature', 'Zooplankton', 'Independent of category', 'Equally within category')
caldat <- lapply(cals, function(x) c(x$value, nrow(x$mat))) %>% 
  do.call('rbind', .) %>% 
  data.frame %>% 
  rownames_to_column %>% 
  rename(
    heurist = rowname, 
    rmse = X1, 
    its = X2
  ) %>% 
  left_join(colerr, by = 'heurist') %>% 
  select(heurist, coll, nprm, avee, its, rmse) %>% 
  mutate(
    heurist = factor(heurist, levels = levs, labels = labs),
    coll = ifelse(is.na(coll), 1, coll),
    coll = sapply(coll, scinot),
    nprm = sapply(nprm, scinot),
    its = sapply(its, scinot),
    rmse = sapply(rmse, scinot), 
    avee = sapply(avee, scinot)
    ) %>% 
  arrange(heurist)

# pairs(caldat[, -1])
totab <- caldat
cap_val <- 'Results of model calibration to observed \\ac{do} for each of seven parameter subsets selected by sensitivity within each parameter category (first), independent of category (second), and equally within each category (third). The collinearity values ($\\gamma$) and parameters of each subset are from \\cref{tab:heurist1,tab:heurist2,tab:heurist3}.  Mean L1 is the average of sensitivity values (\\cref{l1}) for the subset.  $RMSE$ shows the final error comparing observed and model output after the specified number of iterations for optimization.'
colnms <- c('$\\gamma$', '$n$ parameters', 'mean L1', 'Iterations', '$RMSE$')

latex( 
  totab[, -1],
  file = '',
  rowlabel = 'Selection heuristic',
  caption = cap_val,
  caption.loc = 'top',
  size = 'scriptsize',
  label = 'tab:calib',
  rowname = totab$heurist,
  rgroup = c('1', '2', '3'),
  n.rgroup = c(5, 1, 1),
  colheads = colnms
  )

@

\clearpage

%%%%%%
% figures

\invisiblesection{Figure}

% combination example
<<combnex, eval = T, echo = F, fig.cap = 'Examples of unique parameter combinations from different parameter sets and number of selected parameters.  The number of combinations are shown for increasing numbers of selected parameters from the total in the set, where 50 parameter sets are shown each with one through 50 total parameters. Note that the number of unique combinations is shown as the natural-log.', fig.height = 5, fig.width = 5, out.width = '0.6\\textwidth'>>=

numparms <- 1:50
sels <- numparms
toplo <- sapply(numparms, choose, k = sels)
dimnames(toplo) <- list(sels, numparms)
toplo <- data.frame(sels = sels, toplo)
toplo <- gather(toplo, 'numparms', 'combs', -sels) %>% 
  mutate(numparms = as.numeric(gsub('^X', '', numparms))) %>% 
  filter(combs > 0)# %>% 
  # mutate(combs = log(combs))

pal <- 'RdYlGn'
# 
# p1 <- ggplot(toplo, aes(x = sels, y = combs, group = numparms, colour = numparms)) + 
#   geom_line() +
#   # geom_point() + 
#   theme_minimal() + 
#   scale_colour_distiller(palette = pal, 
#     guide = guide_legend(title = 'Total number of\nparameters in set')) +
#   scale_x_continuous('Number of parameters selected from total', expand = c(0, 0)) + 
#   scale_y_continuous('Number of unique parameter combinations, log-scale', expand = c(0, 0)) + 
#   theme(legend.position = 'top')

p2 <- ggplot(toplo, aes(x = numparms, y = sels, fill = combs)) +
  geom_tile() + 
  scale_fill_distiller(palette = pal, 
    guide = guide_legend(title = 'Number of unique parameter\ncombinations'),
    trans = 'log10'
    ) + 
  scale_x_continuous('Total number of parameters in set', expand = c(0, 0)) + 
  scale_y_continuous('Number of parameters selected from total', expand = c(0, 0)) +
  theme_minimal() + 
  theme(legend.position = 'top')

# grid.arrange(p1, p2, ncol = 2)
p2
@

% effects of changing initial and structural conditions
<<sensalltile, fig.cap = 'Sensitivity values (L1, \\cref{l1}) of all state variables to changes in a 50\\% increase in parameter values. Parameters are grouped by category: optics, organic matter, phytoplankton, zooplankton, temperature, and zoplankton.  See \\cref{tab:dosens} for L1 values for \\ac{do} and \\cref{tab:nh4sens,tab:chlsens,tab:irrsens,tab:no3sens,tab:om1sens,tab:om2sens,tab:po4sens} for the other state variables.', fig.height = 6, fig.width = 4, out.width = '0.7\\textwidth', eval = T, echo = F, warning = F, message = F>>=
# initial conditions
data(ini_eval)
data(struct_eval)

to_eval <- lapply(ini_eval, function(x) x[[2]]) %>% 
  c(., struct = list(struct_eval))

eval_levs <- c('def', 'apr', 'sep', 'struct')
eval_labs <- c('Default', 'Initial: April', 'Initial: September', 'Structure: complex')

toplo_all <- sapply(1:length(to_eval), function(x) {
  
  tmp <- reshape2::melt(to_eval[[x]], id.var = c('Parameter', 'error', 'Category'))
  nms <- names(to_eval)[x]

  stts_lev <- rev(c('NH4', 'Chla_mg_tot', 'O2', 'irradiance', 'NO3', 'OM1', 'OM2', 'PO4'))
  stts_lab <- rev(c('Ammonium', 'Chlorophyll', 'Dissolved Oxygen', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate'))
  
  toplo <- mutate(tmp,
      L1 = factor(L1, levels = rev(stts_lev), labels = rev(stts_lab)),
      Parameter = as.character(par_txt(Parameter, frm = 'exp')), 
      nms = nms
    ) %>% 
    rename(Sensitivity = error)

  return(toplo)
  
  }, simplify = F)
toplo_all <- do.call('rbind', toplo_all)
toplo_all <- mutate(toplo_all, nms = factor(nms, levels = eval_levs, labels = eval_labs))

# get only the default results
toplo_all <- filter(toplo_all, nms %in% 'Default')

pbase <- theme(
  panel.grid.major = element_blank(), 
  panel.grid.minor = element_blank(), 
  axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 8), 
  axis.text.y = element_text(size = 8),
  legend.position = 'top', 
  plot.margin = grid::unit(c(2, 2, 2, 2), 'pt'), 
  strip.background = element_blank(), 
  strip.text.y = element_text(angle = 0, hjust = 0, vjust = 0.5)
  ) 

p <- ggplot(toplo_all, aes(y = Parameter, x = L1, fill = Sensitivity)) + 
  geom_tile(colour = 'black') + 
  pbase +
  scale_y_discrete('Parameter', 
    expand = c(0, 0),
    breaks = toplo_all$Parameter, 
    labels = parse(text = toplo_all$Parameter)
    ) + 
  scale_x_discrete('State variable', expand = c(0, 0)) +
  scale_fill_distiller(palette = "Spectral", trans = 'log10',  na.value = 'grey95') +
  facet_grid(Category~., scales = 'free_y', space = 'free') + 
  guides(fill = guide_colourbar(barheight = 0.25, barwidth = 5, label.theme = element_text(size = 6, angle = 0)))

print(p)
@

% identifiability plot
<<identplo, eval = T, fig.cap = 'Collinearity ($\\gamma$ as a measure of identifiability, \\cref{gameq}) of parameter subsets for \\ac{do}.  Plots in (a) show collinearity by parameter categories and (b) shows collinearity by selecting the top 1 through 4 parameters in all categories.  Lines represent collinearity ranges for the possible combinations given the number of parameters in the set.  The temperature category is not shown because \\ac{do} was sensitive to only one parameter (i.e., $\\gamma = 1$).', fig.height = 7, fig.width = 8, echo = F, cache = TRUE>>=

# identifiability by category (all parameters with >0 L1) 
data(cat_ident_all)
data(top_ident_all)

# state variable, categories, and tops to plot (no temp ident because only one parameter)
catnms <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Zooplankton')
toplevs <- paste0('top', 1:4)
toplabs <- paste('Top', 1:4)
tmpcat <- cat_ident_all[['O2']] %>% 
  .[names(.) %in% catnms]
tmptop <- top_ident_all[['O2']] %>% 
  .[names(.) %in% toplevs]

# default theme
mytheme <- theme_minimal() + 
  theme(
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm")
  )

toplo <- tmpcat %>% 
  lapply(., function(x) dplyr::select(x, N, coll)) %>% 
  reshape2::melt(., id.var = c('N', 'coll')) %>% 
  rename(Category = L1) %>% 
  mutate(Category = factor(Category, 
    levels = catnms,
    labels = catnms
    )) %>% 
  filter(N <= 25) %>% # reduced for plot space
  group_by(N, Category) %>% 
  summarise(
    ave = mean(coll), 
    med = median(coll),
    min = min(coll), 
    max = max(coll)
  )

cols <- RColorBrewer::brewer.pal(11, 'Spectral')
lncol <- 'darkgrey'
sz <- 3

p1 <- ggplot(toplo, aes(x = N, group = N)) + 
  geom_errorbar(aes(ymin = min, ymax = max), width = 0, colour = lncol) + 
  geom_point(aes(y = ave, shape = 'Ave'), fill = cols[5], colour = lncol, size = sz) + 
  geom_point(aes(y = med, shape = 'Med'), fill = cols[3], colour = lncol, size = sz) + 
  scale_shape_manual(values = c(21, 24)) + 
  facet_wrap(~ Category, ncol = 1, scales = 'free_y') +
  mytheme %+replace%
  theme(legend.position = 'none') + 
  ggtitle('(a) By parameter category')

# identifiability top 1, 2, 3, 4, 5 all categories combined
toplo2 <-  reshape2::melt(tmptop, id.var = c('N', 'coll')) %>% 
  select(N, coll, L1) %>% 
  mutate(L1 = factor(L1, levels = toplevs, labels = toplabs)) %>% 
  rename(npercat = L1) %>% 
  group_by(N, npercat) %>% 
  summarise(
    ave = mean(coll), 
    med = median(coll),
    min = min(coll), 
    max = max(coll)
  )

p2 <- ggplot(toplo2, aes(x = N, group = N)) + 
  geom_errorbar(aes(ymin = min, ymax = max), width = 0, colour = lncol) + 
  geom_point(aes(y = ave, shape = 'Ave', fill = 'Ave'), colour = lncol, size = sz) + 
  geom_point(aes(y = med, shape = 'Med', fill = 'Med'), colour = lncol, size = sz) + 
  scale_shape_manual(name = '', labels = c('Ave', 'Med'), values = c(21, 24)) + 
  scale_fill_manual(name = '', labels = c('Ave', 'Med'), values = cols[c(5, 3)]) +
  facet_wrap(~ npercat, ncol = 1, scales = 'free_y') +
  mytheme %+replace%
  theme(legend.title = element_blank()) + 
  ggtitle('(b) By top parameters, all categories')

pleg <- g_legend(p2)
p2 <- p2 + 
  mytheme %+replace%
  theme(legend.position = 'none')

leftlab <- expression(paste('Collinearity, ', italic(gamma)))
grid.arrange(
  arrangeGrob(p1, p2, ncol = 2),
  left = textGrob(leftlab, rot = 90),
  bottom = 'Parameters in set',
  pleg, ncol = 2, widths = c(1, 0.1)
)

@

% identifiability plot, all state variables
<<identploall, eval = T, fig.cap = 'Average collinearity ($\\gamma$ as a measure of identifiability, \\cref{gameq}) of parameter subsets for all state variables.  Plots in (a) show collinearity by parameter categories and (b) shows collinearity by selecting the top 1 through 4 parameters in all categories.  Collinearity was averaged for all combinations in a parameter set to evaluate relative differenes between state variables.  The temperature category is not shown because all state variables were sensitive to only one parameter (i.e., $\\gamma = 1$).', fig.height = 8, fig.width = 9, echo = F, cache = TRUE>>=

# identifiability by category (all parameters with >0 L1) 
data(cat_ident_all)
data(top_ident_all)

# state variable, categories, and tops to plot (no temp ident because only one parameter)
catnms <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Zooplankton')
toplevs <- paste0('top', 1:4)
toplabs <- paste('Top', 1:4)

stts_lev <- c('NH4', 'Chla_mg_tot', 'O2', 'irradiance', 'NO3', 'OM1', 'OM2', 'PO4')
stts_lab <- c('Ammonium', 'Chlorophyll', 'Dissolved Oxygen', 'Irradiance', 'Nitrate', 'POM', 'DOM', 'Phosphate')
  
# default theme
mytheme <- theme_minimal() + 
  theme(
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm")
  )

toplo <- sapply(1:length(cat_ident_all), function(x){ 
  
  out <- cat_ident_all[[x]] %>% 
    .[names(.) %in% catnms] %>% 
    lapply(function(y) dplyr::select(y, N, coll)) %>% 
    reshape2::melt(., id.var = c('N', 'coll')) %>% 
    rename(Category = L1) %>% 
    mutate(Category = factor(Category, 
      levels = catnms,
      labels = catnms
      )) %>% 
    filter(N <= 25) %>% # reduced for plot space
    group_by(N, Category) %>% 
    summarise(
      ave = mean(coll),   
      med = median(coll),
      min = min(coll), 
      max = max(coll)
      )
  data.frame(stvar = names(cat_ident_all)[x], out, stringsAsFactors = F)
  
  }, simplify = F) %>% 
  do.call('rbind', .) %>% 
  mutate(`State variable` = factor(stvar, levels = stts_lev, labels = stts_lab))

stvars <- unique(toplo$`State variable`)
mycols <- RColorBrewer::brewer.pal(8, 'Spectral')
names(mycols) <- stvars
fils <- scale_fill_manual(name = 'State variable', values = mycols)

lncol <- 'darkgrey'
sz <- 3

p1 <- ggplot(toplo, aes(x = N, group = N)) + 
  geom_line(aes(y = ave, group = `State variable`), colour = lncol) + 
  geom_point(aes(y = ave, fill = `State variable`), shape = 21, colour = lncol, 
    size = sz
    ) + 
  fils + 
  facet_wrap(~ Category, ncol = 1, scales = 'free_y') +
  mytheme %+replace%
  theme(legend.position = 'none') + 
  scale_y_continuous(trans = 'log10') + 
  ggtitle('(a) By parameter category')

toplo2 <- sapply(1:length(top_ident_all), function(x){ 
  
  out <- top_ident_all[[x]] %>% 
    .[names(.) %in% toplevs] %>% 
    reshape2::melt(id.var = c('N', 'coll')) %>% 
    select(N, coll, L1) %>% 
    mutate(L1 = factor(L1, levels = toplevs, labels = toplabs)) %>% 
    rename(npercat = L1) %>% 
    group_by(N, npercat) %>% 
    summarise(
      ave = mean(coll), 
      med = median(coll),
      min = min(coll), 
      max = max(coll)
    )
  data.frame(stvar = names(top_ident_all)[x], out, stringsAsFactors = F)
  
  }, simplify = F) %>% 
  do.call('rbind', .) %>% 
  mutate(`State variable` = factor(stvar, levels = stts_lev, labels = stts_lab))

p2 <- ggplot(toplo2, aes(x = N, group = N)) + 
  geom_line(aes(y = ave, group = `State variable`), colour = lncol) + 
  geom_point(aes(y = ave, fill = `State variable`), shape = 21, colour = lncol, 
    size = sz
    ) + 
  fils + 
  facet_wrap(~ npercat, ncol = 1, scales = 'free_y') +
  mytheme +
  scale_y_continuous(trans = 'log10') + 
  ggtitle('(b) By top parameters, all categories')

pleg <- g_legend(p2)
p2 <- p2 +
  mytheme %+replace%
  theme(legend.position = 'none')

leftlab <- expression(paste('Collinearity, ', italic(gamma)))
grid.arrange(
  arrangeGrob(p1, p2, ncol = 2, bottom = 'Parameters in set'),
  left = textGrob(leftlab, rot = 90),
  pleg, ncol = 2, widths = c(1, 0.2)
)

@

% percent below gamma thresholds
<<percthresh, eval = T, fig.cap = 'Percent of identifiable parameter sets for \\ac{do} at different $\\gamma$ thresholds, selection criteria, and total number of parameters in the set.  Thresholds varied from $\\gamma = 2$ to $20$ such that sets with $\\gamma$ below a threshold were considered identifiable relative to the value. Plots in (a) show percent of identifiable sets by selecting parameters within categories and (b) shows percent identifiable by selecting from the top 1 through 4 parameters in all categories.  Percent identifiable was based on all sets in \\cref{fig:identplo}.', fig.height = 8, fig.width = 9, echo = F, cache = TRUE>>=
data(cat_ident_all)
data(top_ident_all)

# state variable, categories (no temp ident because only one parameter)
catnms <- c('Optics', 'Organic Matter', 'Phytoplankton', 'Zooplankton')
toplevs <- paste0('top', 1:4)
toplabs <- paste('Top', 1:4)
stts_lev <- c('O2')
stts_lab <- c('Dissolved Oxygen')

thresh <- seq(2, 20, by = 2)

# percent combos less than gamma 15, 10 by state variable, by parameter category
# temperature category not evaluated, only one paramaeter
collcatpers <- lapply(cat_ident_all[stts_lev], function(stvar){
  
  bystvar <- lapply(stvar[!names(stvar) %in% 'Temperature'], function(x){

    bysets <- split(x, x$N) %>% 
      lapply(function(sets){
        colls <- sets$coll
        sapply(thresh, function(x) 100 * sum(colls < x)/length(colls))
       
      }) %>% 
      do.call('rbind', .) %>% 
      data.frame(
        nparms = row.names(.), 
        .
      ) %>% 
      mutate(
        nparms = as.numeric(as.character(nparms))
      ) %>% 
      gather('lval', 'perc', -nparms) %>% 
      mutate(lval = factor(lval, 
        levels = paste0('X', 1:length(thresh)), 
        labels = paste0('l', thresh)
      ))
    bysets

  }) %>% 
  reshape2::melt(., id.vars = names(.[[1]])) %>% 
  rename(Category = L1)
  
  return(bystvar)

  }) %>% 
  reshape2::melt(., id.vars = names(.[[1]])) %>% 
  rename(`State variable` = L1) %>% 
  mutate(
    `State variable` = factor(`State variable`, levels = stts_lev, labels = stts_lab),
    Category = factor(Category, levels = catnms), 
    Threshold = gsub('^l', '', lval),
    Threshold = as.numeric(Threshold)
    )

colltoppers <- lapply(top_ident_all[stts_lev], function(stvar){
  
  bystvar <- lapply(stvar, function(x){

    bysets <- split(x, x$N) %>% 
      lapply(function(sets){
        colls <- sets$coll
        sapply(thresh, function(x) 100 * sum(colls < x)/length(colls))
       
      }) %>% 
      do.call('rbind', .) %>% 
      data.frame(
        nparms = row.names(.), 
        .
      ) %>% 
      mutate(
        nparms = as.numeric(as.character(nparms))
      ) %>% 
      gather('lval', 'perc', -nparms) %>% 
      mutate(lval = factor(lval, 
        levels = paste0('X', 1:length(thresh)), 
        labels = paste0('l', thresh)
      ))
    bysets

  }) %>% 
  reshape2::melt(., id.vars = names(.[[1]])) %>% 
  rename(Category = L1) %>% 
  filter(!Category %in% 'top5')
  
  return(bystvar)

  }) %>% 
  reshape2::melt(., id.vars = names(.[[1]])) %>% 
  rename(`State variable` = L1) %>% 
  mutate(
    `State variable` = factor(`State variable`, levels = stts_lev, labels = stts_lab),
    Category = factor(Category, levels = toplevs, labels = toplabs), 
    Threshold = gsub('^l', '', lval),
    Threshold = as.numeric(Threshold)
    )

toplo1 <- collcatpers
toplo2 <- colltoppers

# default theme
mytheme <- theme_minimal() + 
  theme(
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    legend.position = 'none'
  )

lncol <- 'darkgrey'
sz <- 3

p1 <- ggplot(toplo1, aes(x = nparms, group = lval)) + 
  geom_line(aes(y = perc), colour = lncol) + 
  geom_point(aes(y = perc, fill = Threshold), shape = 21, colour = lncol, 
    size = sz
    ) + 
  scale_fill_distiller(palette = "Spectral") +
  facet_wrap(~ Category, ncol = 1) +
  mytheme +
  ggtitle('(a) By parameter category')

p2 <- ggplot(toplo2, aes(x = nparms, group = lval)) + 
  geom_line(aes(y = perc), colour = lncol) + 
  geom_point(aes(y = perc, fill = Threshold), shape = 21, colour = lncol, 
    size = sz
    ) + 
  scale_fill_distiller(palette = "Spectral") +
  facet_wrap(~ Category, ncol = 1) +
  mytheme +
  ggtitle('(b) By top parameters, all categories')

pleg <- ggplot(toplo2, aes(x = nparms, group = lval)) + 
  geom_point(aes(y = perc, fill = Threshold)) + 
  scale_fill_distiller(palette = "Spectral")
pleg <- g_legend(pleg)

grid.arrange(
  arrangeGrob(p1, p2, ncol = 2, bottom = 'Parameters in set'),
  left = 'Percent identifiable sets',
  pleg, ncol = 2, widths = c(1, 0.2)
)
@

% parameter exclusion temp
<<exclex, eval = T, fig.cap = 'Collinearity ($\\gamma$ as a measure of identifiability, \\cref{gameq}) for \\ac{do} of organic matter parameters for subset combinations in \\cref{fig:identplo}.  Collinearity is evaluated for subsets that excluded and included the parameters at the top of each plot. Collinearity of including all eight parameters is in \\cref{fig:identplo}. Grey lines indicate potential thresholds at $\\gamma = 10, 15$ for maximum acceptable collinearity.', fig.height = 7.25, fig.width = 7.25, echo = F, cache = TRUE, out.width = "0.8\\textwidth">>=
data(cat_ident_all)

tmpcat <- cat_ident_all[['O2']]

toplo <-tmpcat$`Organic Matter` %>% 
  gather('parm', 'inc', -N, -coll) %>% 
  ungroup %>% 
  filter(N < max(N)) %>% 
  mutate(
    parm = as.character(par_txt(parm, frm = 'exp')),
    N = factor(N), 
    inc = factor(inc, levels = c(0, 1), labels = c('excluded', 'included'))
    )

leftlab <- expression(paste('Collinearity, ', italic(gamma)))
ggplot(toplo, aes(x = N, y = coll, fill = inc)) + 
  geom_hline(yintercept = 15, linetype = 'longdash', colour = 'darkgrey') + 
  geom_hline(yintercept = 10, linetype = 'dotted', colour = 'darkgrey') + 
  geom_boxplot(outlier.size = 0.5, size = 0.5) + 
  facet_wrap(~parm, label = label_parsed, ncol = 2) + 
  theme_minimal() + 
  scale_fill_brewer(palette = 'Spectral') + 
  scale_y_continuous(leftlab, trans = 'log', breaks = c(0.1, 1, 10, 100, 1000)) +
  scale_x_discrete('Parameters in set') + 
  theme(
    legend.title = element_blank(),
    axis.line.x = element_line(),
    axis.line.y = element_line(),
    panel.grid.minor = element_blank(), 
    panel.grid.major = element_blank(), 
    legend.position = 'top', #c(0.8, 0.1),
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm")
  )

@

<<areachg, eval = T, fig.cap = 'Estimated hypoxic area and monthly averages (km$^2 \\times$ 1000) using the default parameter settings (a, b) and the differences using a 50\\% increase in each parameter (c, d).  The selected parameters were the top sensitive in each parameter category for \\ac{do} in \\cref{fig:sensalltile,tab:dosens}. Error bars are 95\\% confidence intervals for the monthly averages in (b) and the difference in monthly averages (d) from the perturbed and default results.  Areal extent of estimated hypoxia on August 29\\textsuperscript{th} using the defaulat parameters (grey) and estimated changes with parameter perturbations is shown in (e).', fig.height = 7, fig.width = 7, echo = F, cache = TRUE, out.width = "\\textwidth">>=
# ##
# # area time series
# areats <- read_excel('ignore/runcompare.xlsx', sheet = 'area')
# 
# ##
# # get all arrays of hypox area for each parameter
# shts <- excel_sheets('ignore/runcompare.xlsx') %>% 
#   grep('array', ., value = T)
# latlon <- read_excel('ignore/runcompare.xlsx', sheet = 'Latlon') %>% 
#   list(
#     lat = c(.[,1])[[1]], 
#     lon = as.numeric(names(.)[-1])
#     ) %>% 
#   .[c('lat', 'lon')]
# 
# ls <- vector('list', length = length(shts))
# names(ls) <- shts
# for(sht in shts){
#  
#   cat(sht, '\t')
#   
#   # read the sheet, interpolate for higher res
#   tmp <- read_excel('ignore/runcompare.xlsx', sheet = sht, na = '-9999', col_names = F) 
#   tmp <- tmp[1:176,1:320] %>% 
#     as.matrix
#   obs <- list(x = latlon$lat, y = latlon$lon, z = tmp)
#   newgrd <- expand.grid(
#       x = approx(latlon$lat, n = 4 * ncol(tmp))$y,
#       y = approx(latlon$lon, n = 4 * nrow(tmp))$y
#       )
#   int_val <- fields::interp.surface(
#     obj = obs,
#     loc = newgrd
#     )
#   tmp <- data.frame(newgrd, tmp = int_val) %>%
#     spread(x, tmp) %>%
#     dplyr::select(-y) %>%
#     as.matrix %>% 
#     .[, ncol(.):1] %>% 
#     t
#   
#   # subset hypoxic areas, make polygon
#   # get only the large areas
#   tmp[tmp >= 64] <- NA
#   tmp[!is.na(tmp)] <- 1
#   tmp <- raster(tmp, 
#     xmn = min(latlon$lon), 
#     xmx = max(latlon$lon),   
#     ymn = min(latlon$lat), 
#     ymx = max(latlon$lat)
#     )
#   tmp <- rasterToPolygons(tmp, dissolve = T) %>% 
#     disaggregate
#   areas <- transform(data.frame(tmp), area = gArea(tmp, byid = T))
#   filt <- with(areas, which(area > 0.12)) #quantile(area, 0.99)))
#   tmp <- tmp[filt, ] %>% 
#     fortify
#   
#   ls[[sht]] <- data.frame(parm = sht, tmp)
#    
# }
# 
# # combine output from each sheet
# arrs <- do.call('rbind', ls) %>% 
#   mutate(
#     parm = gsub('_array$', '', parm)
#     ) %>% 
#   # filter(lat > 28) %>% 
#   tibble::remove_rownames(.) %>% 
#   unite('grp', parm, group, remove = F)
# 
# # save
# save(areats, arrs, file = 'data/area.RData', compress = 'xz')

# area time series and 2d arrays (areats, arrs)
data(area)

# theme
mytheme <- theme_minimal() + 
  theme(
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.title.y = element_blank(),
    axis.title.x = element_blank(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"),
    legend.title = element_blank(),
    legend.position = 'top', 
    legend.text.align = 0
  )

# colors
cols <- RColorBrewer::brewer.pal(5, 'Spectral')

# format area time series 
areats <- areats %>% 
  dplyr::select(dts = 1, everything()) %>% 
  mutate(
    dts = as.Date(dts), 
    mo = month(dts, label = T)
  ) %>% 
  gather('var', 'val', -dts, -mo) %>% 
  mutate(
    var = gsub('\\+50%$', '', var),
    val = val / 1000
    ) %>% 
  spread(var, val) %>% 
  filter(mo %in% c('May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'))

# formatted levels in order
levs <- c('umax', 'ZKa', 'astar490', 'KG1', 'Tref')
labs <- paste0(c('umax', 'ZKa', 'astar490', 'KG1', 'Tref(nospA+nospZ)'), '_1')
labs <- par_txt(labs, frm = 'exp')

##
# data for each plot

toplo1 <- areats

toplo2 <- gather(areats, 'var', 'val', -dts, -Original, -mo) %>% 
  mutate(
    valper = val - Original,
    var = factor(var, levels = levs, labels = labs)
  )

toplo3 <- areats %>%
  group_by(mo) %>% 
  summarise(
    valup = t.test(Original)$conf.int[2],
    valdn = t.test(Original)$conf.int[1],
    val = mean(Original)
  )

toplo4 <- gather(areats, 'var', 'val', -dts, -mo, -Original) %>% 
  group_by(mo, var) %>% 
  summarise(
    valup = t.test(val, Original)$conf.int[2],
    valdn = t.test(val, Original)$conf.int[1],
    val = mean(val) - mean(Original)
  ) %>% 
  ungroup %>% 
  mutate(
    var = factor(var, levels = levs, labels = labs)
  )

toplo5 <- filter(arrs, parm %in% 'original')

toplo6 <- filter(arrs, !parm %in% 'original') %>% 
  mutate(
    parm = factor(parm, levels = levs, labels = labs)
  )

##
# subplots

p1 <- ggplot(toplo1, aes(x = dts, y = Original)) + 
  geom_polygon() + 
  mytheme + 
  scale_x_date(date_labels = '%b', date_breaks = '1 month') +
  ggtitle(label = NULL, subtitle = '(a) Area with default parameters')

p2 <- ggplot(toplo2, aes(x = dts, y = valper, fill = var)) + 
  geom_ribbon(aes(ymin = 0, ymax = valper), colour = 'darkgrey', size = 0.35) + 
  mytheme %+replace%
  theme(legend.position = 'none') +
  scale_x_date(date_labels = '%b', date_breaks = '1 month') +
  scale_fill_manual(values = cols, labels = labs) +
  ggtitle(label = NULL, subtitle = '(c) Area differences with parameter perturbations')

p3 <- ggplot(toplo3, aes(x = mo, y = val)) + 
  geom_bar(stat = 'identity') + 
  geom_errorbar(aes(ymin = valdn, ymax = valup), width = 0.25, lwd = 0.35) + 
  mytheme +
  ggtitle(label = NULL, subtitle = '(b) Averages with default parameters')

pd <- position_dodge(0.75)
p4 <- ggplot(toplo4, aes(x = mo, y = val, fill = var)) + 
  geom_bar(stat = 'identity', position = pd, width = 0.75, colour = 'darkgrey', lwd = 0.35) + 
  geom_errorbar(aes(ymin = valdn, ymax = valup), position = pd, width = 0.25, size = 0.35) + 
  scale_fill_manual(values = cols, labels = labs) +
  mytheme +
  ggtitle(label = NULL, subtitle = '(d) Average differences with parameter perturbations')

pleg <- g_legend(p4)
p4 <- p4 + 
  mytheme  %+replace%
  theme(legend.position = 'none')

# basemap for area ts
ext <- make_bbox(arrs$long, arrs$lat, f = 0.01)
map <- get_stamenmap(ext, zoom = 9, maptype = "toner-lite")
    
p5 <- ggmap(map) + 
  geom_polypath(data = toplo5, aes(x = long, y = lat, group = grp), alpha = 0.5) +
  geom_path(data = toplo6, aes(x = long, y = lat, group = grp, colour = parm), alpha = 0.8, size = 0.8) + 
  scale_y_continuous(expand = c(0, 0)) + 
  scale_x_continuous(expand = c(0, 0)) +
  scale_colour_manual(values = cols, labels = labs) +
  coord_equal() + 
  mytheme %+replace%
  theme(legend.position = 'none') +
  ggtitle(label = NULL, subtitle = '(e) Estimated areal extents on August 29, default extent in grey') + 
  scalebar(location = 'bottomleft', y.min = 28.35, y.max = 28.8, x.min = -93.3, x.max = -92, 
    dist = 20, dd2km= TRUE, model='WGS84', st.dist=.1, st.size = 2, height = 0.08)

pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
pC <- ggplot_gtable(ggplot_build(p3))
pD <- ggplot_gtable(ggplot_build(p4))
pE <- ggplot_gtable(ggplot_build(p5))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3])
pA$widths[2:3] <- maxWidth
pC$widths[2:3] <- maxWidth
pE$widths[2:3] <- maxWidth
maxWidth = unit.pmax(pC$widths[2:3], pD$widths[2:3], pE$widths[2:3])
pB$widths[2:3] <- maxWidth
pD$widths[2:3] <- maxWidth

ylab <- expression(paste('                                               Hypoxic area ( ', km^2, ' x 1000)'))
grid.arrange(
  arrangeGrob(
    arrangeGrob(pA, pC, ncol = 2),
    pleg, 
    arrangeGrob(pB, pD, ncol = 2), 
    pE,
    ncol = 1, 
      left = textGrob(ylab, rot = 90),
    heights = c(1, 0.1, 1, 1.4)
  )
)

@

\clearpage

% supplementary material
\beginsupplement

%%
% sup tabs

% ammonium sensitivity all categories
<<nh4sens, eval = T, cache = F>>=
senstab(out_var = 'NH4', tablab = 'nh4sens', captxt = 'ammonium', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% chlorophyll sensitivity all categories
<<chlsens, eval = T, cache = F>>=
senstab(out_var = 'Chla_mg_tot', tablab = 'chlsens', captxt = '\\ac{chla}', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% irradiance sensitivity all categories
<<irrsens, eval = T, cache = F>>=
senstab(out_var = 'irradiance', tablab = 'irrsens', captxt = 'irradiance', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% nitrate sensitivity all categories
<<no3sens, eval = T, cache = F>>=
senstab(out_var = 'NO3', tablab = 'no3sens', captxt = 'nitrate', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% om1 sensitivity all categories
<<om1sens, eval = T, cache = F>>=
senstab(out_var = 'OM1', tablab = 'om1sens', captxt = '\\ac{pom}', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% om2 sensitivity all categories
<<om2sens, eval = T, cache = F>>=
senstab(out_var = 'OM2', tablab = 'om2sens', captxt = '\\acl{dom}', digits = 2, pow = 2, tabsize = 'footnotesize')
@

% phosphate sensitivity all categories
<<po4sens, eval = T, cache = F>>=
senstab(out_var = 'PO4', tablab = 'po4sens', captxt = 'phosphate', digits = 2, pow = 2, tabsize = 'footnotesize')
@

\clearpage

%%
% sup figs
% NULL

\end{document}